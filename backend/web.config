<?xml version="1.0" encoding="UTF-8"?>
<!--
IIS Configuration for DINQR Backend
===================================
This web.config file configures IIS to work as a reverse proxy for the DINQR Flask application
running on Waitress server. It handles URL rewriting, request forwarding, and static file serving.

Prerequisites:
- IIS with Application Request Routing (ARR) module installed
- URL Rewrite module installed
- DINQR backend running on Waitress server (default: localhost:5000)

Installation:
1. Place this file in the IIS site root directory
2. Ensure ARR and URL Rewrite modules are installed
3. Configure the backend server URL in the rewrite rules below
4. Start the DINQR backend service
-->
<configuration>
  <system.webServer>
    
    <!-- Default document configuration -->
    <defaultDocument>
      <files>
        <clear />
        <add value="index.html" />
      </files>
    </defaultDocument>
    
    <!-- URL Rewrite rules for reverse proxy -->
    <rewrite>
      <rules>
        
        <!-- Rule 1: Handle API requests - Forward to Waitress backend -->
        <rule name="DINQRAPIProxy" stopProcessing="true">
          <match url="^api/(.*)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="http://127.0.0.1:5000/{R:1}" />
        </rule>
        
        <!-- Rule 2: Handle direct Flask routes - Forward to Waitress backend -->
        <rule name="DINQRFlaskRoutes" stopProcessing="true">
          <match url="^(auth|users|qr|settings|health|apidocs).*" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="http://127.0.0.1:5000/{R:0}" />
        </rule>
        
        <!-- Rule 3: Handle static files from backend -->
        <rule name="DINQRStaticFiles" stopProcessing="true">
          <match url="^static/(.*)" />
          <action type="Rewrite" url="http://127.0.0.1:5000/static/{R:1}" />
        </rule>
        
        <!-- Rule 4: Handle uploads and media files -->
        <rule name="DINQRUploads" stopProcessing="true">
          <match url="^uploads/(.*)" />
          <action type="Rewrite" url="http://127.0.0.1:5000/uploads/{R:1}" />
        </rule>
        
        <!-- Rule 5: Frontend SPA fallback - serve index.html for non-API routes -->
        <rule name="DINQRFrontendSPA" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/api" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/(auth|users|qr|settings|health|apidocs)" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/(static|uploads)" negate="true" />
          </conditions>
          <action type="Rewrite" url="/index.html" />
        </rule>
        
      </rules>
      
      <!-- Global rewrite rules for ARR -->
      <globalRules>
        <rule name="ARRHttps" patternSyntax="ECMAScript" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{HTTP_X_FORWARDED_PROTO}" pattern="https" ignoreCase="true" />
          </conditions>
          <action type="None" />
        </rule>
      </globalRules>
      
    </rewrite>
    
    <!-- Configure ARR (Application Request Routing) -->
    <system.webServer>
      <proxy enabled="true" />
    </system.webServer>
    
    <!-- HTTP Headers for security and performance -->
    <httpProtocol>
      <customHeaders>
        <!-- Security headers -->
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="X-Frame-Options" value="DENY" />
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
        <add name="Permissions-Policy" value="geolocation=(), microphone=(), camera=()" />
        
        <!-- Performance headers -->
        <add name="X-Powered-By" value="DINQR/1.0" />
        
        <!-- CORS headers for API requests -->
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
        <add name="Access-Control-Allow-Headers" value="Content-Type, Authorization, X-Requested-With" />
        
        <!-- Remove server header for security -->
        <remove name="Server" />
      </customHeaders>
    </httpProtocol>
    
    <!-- Static content configuration -->
    <staticContent>
      
      <!-- MIME types for modern web applications -->
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <mimeMap fileExtension=".map" mimeType="application/json" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      
      <!-- Cache control for static assets -->
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="30.00:00:00" />
      
    </staticContent>
    
    <!-- Compression configuration -->
    <httpCompression>
      <dynamicTypes>
        <add mimeType="application/json" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="text/css" enabled="true" />
        <add mimeType="text/html" enabled="true" />
        <add mimeType="text/plain" enabled="true" />
        <add mimeType="application/xml" enabled="true" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    
    <!-- Request filtering for security -->
    <security>
      <requestFiltering>
        <!-- Limit request size to 1GB -->
        <requestLimits maxAllowedContentLength="1073741824" />
        
        <!-- Block potentially dangerous file extensions -->
        <fileExtensions>
          <add fileExtension=".exe" allowed="false" />
          <add fileExtension=".bat" allowed="false" />
          <add fileExtension=".cmd" allowed="false" />
          <add fileExtension=".com" allowed="false" />
          <add fileExtension=".pif" allowed="false" />
          <add fileExtension=".scr" allowed="false" />
          <add fileExtension=".vbs" allowed="false" />
        </fileExtensions>
        
        <!-- Block hidden segments -->
        <hiddenSegments>
          <add segment="bin" />
          <add segment="logs" />
          <add segment=".env" />
          <add segment="config" />
        </hiddenSegments>
        
      </requestFiltering>
    </security>
    
    <!-- Error pages -->
    <httpErrors errorMode="Custom" defaultResponseMode="File">
      <remove statusCode="404" subStatusCode="-1" />
      <remove statusCode="500" subStatusCode="-1" />
      <error statusCode="404" path="/404.html" responseMode="File" />
      <error statusCode="500" path="/500.html" responseMode="File" />
    </httpErrors>
    
    <!-- Directory browsing -->
    <directoryBrowse enabled="false" />
    
  </system.webServer>
  
  <!-- Application settings -->
  <appSettings>
    <add key="dinqr.backend.url" value="http://127.0.0.1:5000" />
    <add key="dinqr.environment" value="production" />
  </appSettings>
  
  <!-- Connection strings -->
  <connectionStrings>
    <!-- IIS can access these if needed for logging or monitoring -->
    <add name="DINQRLocal" connectionString="Server=localhost;Database=localdb;Integrated Security=true;" />
  </connectionStrings>
  
</configuration>
